// ATTENTION!
// THIS FILE IS AUTO GENERATED BY CODE GENERATOR.
// DONT TRY TO CHANGE IT MANUALY!
using UnityEngine;

public static class ResDB {
	static GameConfig GameConfigObjCache = null; // object cache
	public static GameConfig GameConfigAsset() {
		if (GameConfigObjCache==null)
			GameConfigObjCache = Resources.Load<GameConfig>("GameConfig");
		return GameConfigObjCache;
	} // end method GameConfigAsset
	
	static IntValue GameScoresObjCache = null; // object cache
	public static IntValue GameScoresAsset() {
		if (GameScoresObjCache==null)
			GameScoresObjCache = Resources.Load<IntValue>("GameScores");
		return GameScoresObjCache;
	} // end method GameScoresAsset
	
	static GameStateChangeEvent GameStateObjCache = null; // object cache
	public static GameStateChangeEvent GameStateAsset() {
		if (GameStateObjCache==null)
			GameStateObjCache = Resources.Load<GameStateChangeEvent>("GameState");
		return GameStateObjCache;
	} // end method GameStateAsset
	
	static EventObject MachineGunShotEventObjCache = null; // object cache
	public static EventObject MachineGunShotEventAsset() {
		if (MachineGunShotEventObjCache==null)
			MachineGunShotEventObjCache = Resources.Load<EventObject>("MachineGunShotEvent");
		return MachineGunShotEventObjCache;
	} // end method MachineGunShotEventAsset
	
	static EventObject MainGunShootObjCache = null; // object cache
	public static EventObject MainGunShootAsset() {
		if (MainGunShootObjCache==null)
			MainGunShootObjCache = Resources.Load<EventObject>("MainGunShoot");
		return MainGunShootObjCache;
	} // end method MainGunShootAsset
	
	static EventObject MineBlowUpEventObjCache = null; // object cache
	public static EventObject MineBlowUpEventAsset() {
		if (MineBlowUpEventObjCache==null)
			MineBlowUpEventObjCache = Resources.Load<EventObject>("MineBlowUpEvent");
		return MineBlowUpEventObjCache;
	} // end method MineBlowUpEventAsset
	
	static Vector3Value PlayerTanksAimPointObjCache = null; // object cache
	public static Vector3Value PlayerTanksAimPointAsset() {
		if (PlayerTanksAimPointObjCache==null)
			PlayerTanksAimPointObjCache = Resources.Load<Vector3Value>("PlayerTanksAimPoint");
		return PlayerTanksAimPointObjCache;
	} // end method PlayerTanksAimPointAsset
	
	static IntValue TanksCounterObjCache = null; // object cache
	public static IntValue TanksCounterAsset() {
		if (TanksCounterObjCache==null)
			TanksCounterObjCache = Resources.Load<IntValue>("TanksCounter");
		return TanksCounterObjCache;
	} // end method TanksCounterAsset
	
	public static GameObject Combat_Vehicle102Prefab() {
		return Resources.Load<GameObject>("Combat_Vehicle102");
	} // end method Combat_Vehicle102Asset
	
	public static T Combat_Vehicle102Prefab<T>() {
		var go = Combat_Vehicle102Prefab();
		return go.GetComponent<T>();
	} // end method Combat_Vehicle102Prefab
	

public static class devtodev {
} // end of class devtodev

public static class Managers {
		static ProjectileManager MachineGunProjectileManagerObjCache = null; // object cache
		public static ProjectileManager MachineGunProjectileManagerAsset() {
			if (MachineGunProjectileManagerObjCache==null)
				MachineGunProjectileManagerObjCache = Resources.Load<ProjectileManager>("Managers/MachineGunProjectileManager");
			return MachineGunProjectileManagerObjCache;
		} // end method MachineGunProjectileManagerAsset
		
		static ProjectileManager MainGunProjectileManagerObjCache = null; // object cache
		public static ProjectileManager MainGunProjectileManagerAsset() {
			if (MainGunProjectileManagerObjCache==null)
				MainGunProjectileManagerObjCache = Resources.Load<ProjectileManager>("Managers/MainGunProjectileManager");
			return MainGunProjectileManagerObjCache;
		} // end method MainGunProjectileManagerAsset
		
		static PlayFabManager PlayFabManagerObjCache = null; // object cache
		public static PlayFabManager PlayFabManagerAsset() {
			if (PlayFabManagerObjCache==null)
				PlayFabManagerObjCache = Resources.Load<PlayFabManager>("Managers/PlayFabManager");
			return PlayFabManagerObjCache;
		} // end method PlayFabManagerAsset
		
} // end of class Managers

public static class Pools {
		static ObjectPool MachinegunBulletPoolObjCache = null; // object cache
		public static ObjectPool MachinegunBulletPoolAsset() {
			if (MachinegunBulletPoolObjCache==null)
				MachinegunBulletPoolObjCache = Resources.Load<ObjectPool>("Pools/MachinegunBulletPool");
			return MachinegunBulletPoolObjCache;
		} // end method MachinegunBulletPoolAsset
		
		static ObjectPool MachinegunHitPoolObjCache = null; // object cache
		public static ObjectPool MachinegunHitPoolAsset() {
			if (MachinegunHitPoolObjCache==null)
				MachinegunHitPoolObjCache = Resources.Load<ObjectPool>("Pools/MachinegunHitPool");
			return MachinegunHitPoolObjCache;
		} // end method MachinegunHitPoolAsset
		
		static ObjectPool MainGunHitPoolObjCache = null; // object cache
		public static ObjectPool MainGunHitPoolAsset() {
			if (MainGunHitPoolObjCache==null)
				MainGunHitPoolObjCache = Resources.Load<ObjectPool>("Pools/MainGunHitPool");
			return MainGunHitPoolObjCache;
		} // end method MainGunHitPoolAsset
		
		static ObjectPool MainGunShellPoolObjCache = null; // object cache
		public static ObjectPool MainGunShellPoolAsset() {
			if (MainGunShellPoolObjCache==null)
				MainGunShellPoolObjCache = Resources.Load<ObjectPool>("Pools/MainGunShellPool");
			return MainGunShellPoolObjCache;
		} // end method MainGunShellPoolAsset
		
} // end of class Pools

public static class SpawnText {
		static SpawnTextConfig ReceivePointsObjCache = null; // object cache
		public static SpawnTextConfig ReceivePointsAsset() {
			if (ReceivePointsObjCache==null)
				ReceivePointsObjCache = Resources.Load<SpawnTextConfig>("SpawnText/ReceivePoints");
			return ReceivePointsObjCache;
		} // end method ReceivePointsAsset
		
		static SpawnTextPipeline SpawnTextPipelineObjCache = null; // object cache
		public static SpawnTextPipeline SpawnTextPipelineAsset() {
			if (SpawnTextPipelineObjCache==null)
				SpawnTextPipelineObjCache = Resources.Load<SpawnTextPipeline>("SpawnText/SpawnTextPipeline");
			return SpawnTextPipelineObjCache;
		} // end method SpawnTextPipelineAsset
		
} // end of class SpawnText
} // end of class ResDB
